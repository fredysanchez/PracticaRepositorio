<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\libs\presentation.utilities\bin\Debug\presentation.utilities.dll">
   <Modules>
    <Module Name="presentation.utilities.dll">
     <Namespaces>
      <Namespace Name="presentation.utilities">
       <Types>
        <Type Name="JasonCall" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RunAsync(System.String,System.Type,presentation.utilities.JasonCall+eTypeSend,System.Type,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Eliminar (Dispose) objetos antes de perder el ámbito" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-01-18 23:29:08Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\libs\presentation.utilities" File="JasonCall.cs" Line="46">En el método 'JasonCall.RunAsync(string, Type, JasonCall.eTypeSend, Type, object)', llame a System.IDisposable.Dispose en el objeto 'worker' antes de que todas las referencias a él estén fuera de ámbito.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataArrived" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-01-18 23:29:08Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare el primer parámetro de 'JasonCall.dDataArrived' como un objeto denominado 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare el segundo parámetro de 'JasonCall.dDataArrived' como EventArgs o una instancia de un tipo que extienda EventArgs, denominado 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare los controladores de evento correctamente</Name>
   <Description>Normalmente, los eventos .NET tienen dos parámetros que especifican el remitente del evento y los datos del mismo. Las firmas del controlador de eventos deberían tener la siguiente forma: void MyEventHandler(object sender, EventArgs e). El parámetro 'sender' es siempre de tipo System.Object, incluso aunque fuera posible utilizar un tipo más específico. El parámetro 'e' es siempre de tipo System.EventArgs. Los eventos que no proporcionan datos del evento deberían utilizar el tipo delegado System.EventHandler. Los controladores de evento devuelven void para que puedan enviar cada evento a varios métodos de destino. Cualquier valor devuelto por el destino se perderá después de la primera llamada.</Description>
   <Resolution Name="First">Declare el primer parámetro de {0} como un objeto denominado 'sender'.</Resolution>
   <Resolution Name="Second">Declare el segundo parámetro de {0} como EventArgs o una instancia de un tipo que extienda EventArgs, denominado 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Eliminar (Dispose) objetos antes de perder el ámbito" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Eliminar (Dispose) objetos antes de perder el ámbito</Name>
   <Description>Si un objeto que se puede eliminar (método Dispose) no se elimina de forma explícita antes de que todas las referencias a él estén fuera de ámbito, el objeto se eliminará en algún momento indeterminado cuando el recolector de elementos no utilizados ejecute el finalizador del objeto. Puesto que podría producirse un evento excepcional que impida que se ejecute el finalizador del objeto, el objeto debe eliminarse de forma explícita.</Description>
   <Resolution Name="NonExceptionEdge">En el método {0}, llame a System.IDisposable.Dispose en el objeto {1} antes de que todas las referencias a él estén fuera de ámbito.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Categoría</String>
  <String Key="Certainty">Certeza</String>
  <String Key="CollapseAll">Contraer todo</String>
  <String Key="CheckId">Comprobar id.</String>
  <String Key="Error">Error</String>
  <String Key="Errors">errores</String>
  <String Key="ExpandAll">Expandir todo</String>
  <String Key="Help">Ayuda</String>
  <String Key="Line">Línea</String>
  <String Key="Messages">mensajes</String>
  <String Key="LocationNotStoredInPdb">[Ubicación no almacenada en Pdb]</String>
  <String Key="Project">Proyecto</String>
  <String Key="Resolution">Resolución</String>
  <String Key="Rule">Regla</String>
  <String Key="RuleFile">Archivo de regla</String>
  <String Key="RuleDescription">Descripción de la regla</String>
  <String Key="Source">Origen</String>
  <String Key="Status">Estado</String>
  <String Key="Target">Círculos concéntricos</String>
  <String Key="Warning">Advertencia</String>
  <String Key="Warnings">advertencias</String>
  <String Key="ReportTitle">Informe de análisis del código</String>
 </Localized>
</FxCopReport>
